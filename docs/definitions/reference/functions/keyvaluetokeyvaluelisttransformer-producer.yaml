functions:
  generate_batch_orders:
    type: generator
    globalCode: |
      import random
      counter = 0
      products = ["laptop", "tablet", "phone", "monitor", "keyboard"]
      customers = [
        "alice@example.com", "bob@example.com", "charlie@example.com", 
        "diana@example.com", "eve@example.com"
      ]
    code: |
      global counter, products, customers
      
      # Generate batch ID as key
      batch_id = f"batch_{counter:03d}"
      counter += 1
      
      # Generate batch with 2-4 orders
      num_orders = random.randint(2, 4)
      orders = []
      
      for i in range(num_orders):
        order = {
          "product": random.choice(products),
          "quantity": random.randint(1, 5),
          "customer_email": random.choice(customers)
        }
        orders.append(order)
      
      # Create batch value
      batch_value = {
        "batch_id": batch_id,
        "orders": orders,
        "timestamp": counter * 1000,
        "total_orders": num_orders
      }
      
    expression: (batch_id, batch_value)
    resultType: (string, json)

producers:
  batch_order_producer:
    generator: generate_batch_orders
    interval: 3s
    to:
      topic: batch_orders
      keyType: string
      valueType: json