streams:
  retail_sales:
    topic: retail_sales
    keyType: string  # Product ID
    valueType: json  # Sale details including region, amount, quantity

  sales_by_region:
    topic: sales_by_region
    keyType: json  # Windowed region key as JSON
    valueType: long   # Total sales amount

functions:

pipelines:
  regional_sales_analytics:
    from: retail_sales
    via:
      # Group by region instead of product ID
      - type: map
        mapper:
          code: |
            # Extract region from the sale event and use it as the new key
            region = value.get("region", "unknown")
          expression: (region, value)
          resultType: (string, json)
      - type: groupByKey
      # Use tumbling window of 1 minute for testing
      - type: windowByTime
        windowType: tumbling
        duration: 1m
      # Aggregate sales data
      - type: aggregate
        store:
          type: window
          windowSize: 1m
          retention: 10m
          caching: false
        initializer:
          expression: 0
          resultType: long
        aggregator:
          expression: aggregatedValue + value.get("amount", 0)
      - type: toStream
      - type: peek
        forEach:
          code: |
            log.info("Region {} 1-min sales: ${}", key, value)
    # Output to region-specific topic
    to: sales_by_region